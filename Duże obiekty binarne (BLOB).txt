​​​​​1.

create table movies as select * from ztpd.movies;

2.

describe movies;

3.

select id, title from movies where cover is null;

4. 

select id, title, dbms_lob.getlength(cover) as filesize from movies where cover is not null;

5.

select id, title, dbms_lob.getlength(cover) as filesize from movies where cover is null;

Filesize będzie mieć wartość NULL.

6.

select DIRECTORY_NAME, DIRECTORY_PATH from ALL_DIRECTORIES where DIRECTORY_NAME = 'TPD_DIR'

7.

update movies set cover = EMPTY_BLOB(), mime_type = 'image/jpeg' where id = 66;

8.

select id, title, dbms_lob.getlength(cover) as filesize from movies where id in (65, 66);

9.

DECLARE
lobd blob;
fils BFILE := BFILENAME('TPD_DIR','escape.jpg');
BEGIN
SELECT cover INTO lobd
FROM movies
where id=66
FOR UPDATE;
DBMS_LOB.fileopen(fils, DBMS_LOB.file_readonly);
DBMS_LOB.LOADFROMFILE(lobd,fils,DBMS_LOB.GETLENGTH(fils));
DBMS_LOB.FILECLOSE(fils);
COMMIT;
END;
/

10.

CREATE TABLE TEMP_COVERS(
    movie_id number(12),
    image bfile,
    mime_type varchar(50)
);

11.

insert into temp_covers values (65, BFILENAME('TPD_DIR','escape.jpg'), 'image/jpeg');
commit;

12.

select movie_id, dbms_lob.getlength(image) as filesize from temp_covers;

13.

DECLARE
    tmp BLOB;
    fils BFILE;
    v_mimetype VARCHAR2(50);
BEGIN
    SELECT image INTO fils FROM temp_covers WHERE movie_id = 65;
    DBMS_LOB.createtemporary(tmp, TRUE);
    DBMS_OUTPUT.put_line(DBMS_LOB.GETLENGTH(fils));
    SELECT cover INTO tmp FROM movies WHERE id = 65 FOR UPDATE;
    SELECT mime_type INTO v_mimetype FROM temp_covers WHERE movie_id = 65;
    DBMS_OUTPUT.put_line(v_mimetype);
    DBMS_LOB.FILEOPEN(fils, DBMS_LOB.FILE_READONLY);
    DBMS_LOB.LOADFROMFILE(tmp, fils, DBMS_LOB.GETLENGTH(fils));
    DBMS_LOB.FILECLOSE(fils);
    UPDATE movies
    SET mime_type = v_mimetype
    WHERE id = 65;
    COMMIT;
    DBMS_LOB.FREETEMPORARY(tmp);
END;
/

14.

select id, title, dbms_lob.getlength(cover) as filesize from movies where id in (65, 66);

15.

drop table movies;
